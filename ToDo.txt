Avoid taking too large a step in expSolveTaylor()
  1. I'm an idiot: numIntervals and numSteps are accomplishing the same thing,
     should move expSolveTaylorInner into expSolveTaylor, limit max eigenValue
     inside getTruncatedParameters()
  2. Need to understand why normMagnus /= (double)numIntervals;
   in expSolveTaylor() is wrong
     > suspect that it reduces taylorDegree. Can probably solve 1 and 2
       together by moving further subdivision of interval into
       getTruncatedParameters(), and keeping taylorDegree high. (keep in mind
       want to minimize taylorDegree * numSteps)

Allow DiffEqFunctor to choose sparse/dense matrices based on problem.
Think about removing SUB_MEAN_EIGEN, which seems to add nothing but complexity
Either remove USE_PADE, or add in similar check to ensure step sizes are not
  too large

Nice to do:
  improve calculation of magnusError (avoid matrix exponential?)
    Blanes et al 1999 pg 448 (4.11)
  in getLinearizedDerivatives, vectorize filling derivativesMat, dStates
  replace [n] indexing by iterators
  

  
